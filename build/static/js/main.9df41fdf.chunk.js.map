{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","poersonObject","post","id","delete","newPerson","put","Person","name","number","handleClick","onClick","ErrorNotification","message","style","color","fontStyle","fontSize","Notification","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","newSearch","handleFilterChange","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","showAll","setShowAll","errorMessage","setErrorMessage","notificationMessage","setNotificationMessage","useEffect","personService","initialPerson","personsToShow","filter","person","includes","event","target","length","preventDefault","newObject","find","n","changedPerson","some","window","confirm","returnedPerson","map","p","console","log","setTimeout","concat","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df41fdf.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (poersonObject) => {\r\n    const request = axios.post(baseUrl, poersonObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default {getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Person = ({name, number, handleClick}) => {\n  return (\n    <div>\n    {name} {number} \n    <button onClick={handleClick} > delete</button>\n    </div>\n  )\n}\n\nconst ErrorNotification = ({message}) => {\n  const notificationStyle = {\n    color: \"red\",\n    fontStyle: \"italic\",\n    fontSize: 20\n  }\n\n  if(message === null){\n    return null\n  }\n\n  return(\n    <div style={notificationStyle} >\n      {message}\n    </div>\n  )\n}\n\nconst Notification = ({message}) => {\n  const notificationStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 20\n  }\n\n  if(message === null){\n    return null\n  }\n\n  return(\n    <div style={notificationStyle} >\n      {message}\n    </div>\n  )\n}\n\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson} >\n    <div>\n      name: <input value={props.newName} onChange={props.handleNameChange} />\n    </div>\n    <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Filter = ({newSearch, handleFilterChange}) => {\n  return (\n  <div>filter by name: <input value={newSearch} onChange={handleFilterChange} /></div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  \n  useEffect(()=> {\n    personService\n      .getAll()\n      .then(initialPerson => setPersons(initialPerson) )\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newObject = {\n      name: newName,\n      number: newNumber\n    }\n    const person = persons.find(n => n.name === newName)\n    const changedPerson = {...person, number: newNumber}\n    \n    if(persons.some(person => person.name === newName) === true){\n      if(window.confirm(`${newName} is already in the phonebook, replace the old number with a new one?`)){\n        personService\n          .update(person.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => {\n              console.log(`p.id: ${p.id} person.id: ${person.id} person: ${person} returnedPerson: ${returnedPerson}`)\n              if(p.id !== person.id){\n                return p\n              } else {\n                return returnedPerson\n              }\n            }))\n          })\n        setNotificationMessage(`Updated ${newName} phone number`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 3000)\n      }\n    } else {\n      personService\n      .create(newObject)\n      .then(initialPerson => setPersons(persons.concat(initialPerson)))\n      setNotificationMessage(`Added ${newName} to the phonebook`)\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 3000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDeletePerson = (id, name) => {\n    if(window.confirm(`Do you want to remove ${name}?`)) {\n    personService\n      .remove(id)\n      .catch(error => {\n        setErrorMessage(`${name} was already removed from the phonebook`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      })\n    setPersons(persons.filter(person => person.id !== id))\n  }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewSearch(event.target.value)\n    if(`${newSearch.length}` > 0){\n      setShowAll(false)\n    } else{\n      setShowAll(true)\n    }\n  }\n\n  const personsToShow = showAll ? persons : persons.filter(person => person.name.includes(`${newSearch}`))\n\n  return (\n    <div>\n      <h2>phonebook</h2>\n      <Filter\n        newSearch={newSearch}\n        handleFilterChange={handleFilterChange}\n      />\n      <ErrorNotification message={errorMessage} />\n      <Notification message={notificationMessage} />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      {personsToShow.map(person => <Person key={person.id} name={person.name} number={person.number} handleClick={() => handleDeletePerson(person.id, person.name)} />)}\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}